spring:
  application:
    name: payment-service
  datasource:
    url: ${DATASOURCE_URL:jdbc:mysql://localhost:3306/paymentservicedb}
    username: ${DATASOURCE_USERNAME:username}
    password: ${DATASOURCE_PASSWORD:password}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: validate # Automatically updates the schema (useful for development)
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${ISSUER_URI:http://localhost:8000/realms/realm-name}
  cloud:
    openfeign:
      client:
        config:
          default:
            connectTimeout: 1000
            readTimeout: 1000
            loggerLevel: basic
      circuitbreaker:
        enabled: false
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
          
resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 5
        slidingWindowType: COUNT_BASED
        failureRateThreshold: 50
        waitDurationInOpenState: 60000
        permittedNumberOfCallsInHalfOpenState: 2
        automaticTransitionFromOpenToHalfOpenEnabled: true
        registerHealthIndicator: true
    instances:
      UserServiceCall:
        baseConfig: default
      SalonServiceCall:
        baseConfig: default
      PaymentServiceCall:
       baseConfig: default
      ServiceOfferingServiceCall:
       baseConfig: default
    circuit-breaker-aspect-order: 1
  retry:
    configs:
      default:
        maxAttempts: 2
        waitDuration: 5000
    instances:
      UserServiceCall:
        baseConfig: default
      SalonServiceCall:
        baseConfig: default
      PaymentServiceCall:
        baseConfig: default
      ServiceOfferingServiceCall:
        baseConfig: default
    retry-aspect-order: 2 

server:
  port: ${SERVER_PORT:8087} #  override with SERVER_PORT env var
  forward-headers-strategy: framework

eureka:
  client:
    register-with-eureka: true # This is Eureka client and it needs to register with Eureka server default is true
    fetch-registry: true # This is Eureka client and it need to fetch registry from eureka server default is true
    service-url:
      defaultZone: ${EUREKA_DEFAULT_ZONE}
  instance:
    instance-id: ${spring.application.name}-${server.port}
    prefer-ip-address: true


management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics # Expose Actuator endpoints
  endpoint:
    health:
      show-details: always
  server:
    port: ${MANAGEMENT_SERVER_PORT:9007}


springdoc:
  api-docs:
    path: /payment-service-doc/v3/api-docs
  swagger-ui:
    enabled: false

openid:
  connect:
    url: ${OPENID_CONNECT_URL:http://openidconnecturl}

stripe:
  api-key: ${STRIPE_SECRET_KEY:key}
  webhook-secret: ${STRIPE_WEBHOOK_SECRET_KEY:key}
  frontend-success-url: ${STRIPE_PAYMENT_SUCCESS_URL:http://localhost}
  frontend-cancel-url: ${STRIPE_PAYMENT_CANCEL_URL:http://localhost}